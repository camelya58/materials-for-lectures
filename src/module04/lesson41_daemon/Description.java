package module04.lesson41_daemon;

/**
 * Thread grouping. Daemon streams.
 * 1. Определение потоков-демонов.
 * Daemon-потоки предназначены для выполнения фоновых задач и оказания различных сервисов User потокам.
 *
 * 2. Создание потоков-демонов. Принципы работы.
 * Работа обычных потоков не зависит от работы мэйн. Программа завершится только после завершения работы всех потоков.
 * В то время как, если все обычные потоки завершены, программа завершится, не дожидаясь окончания работы демон потоков.
 *
 * Примерами демон-потоков могут служить большинство потоков JVM: работа уборщика-мусора, освобождение памяти и т.д.
 *
 * 3. Определение группы потоков.
 * 4. Создание группы и методы работы с группой.
 *
 * 5. Volatile
 * Запрет на кэширование данных. Пример.
 *
 * class VolatileExample
 *
 * 6. Гонка данных - Data race
 * Это проблема, которая может возникнуть, когда два и более потоков обращаются к одной и той же переменной
 * и как минимум один поток ее изменяет.
 *
 * Выход - сонхронизация доступа к такой переменной.
 *
 * class DataRace
 *
 * 7. Синхронизированные блоки
 *
 * package synchronize
 *
 *
 * @author Kamila Meshcheryakova
 * created 09.12.2020
 */
public class Description {
}
